version: '3.8'

services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: kpi-redis-dev
    command: redis-server --appendonly yes
    volumes:
      - redis_data_dev:/data
    ports:
      - "6379:6379"
    networks:
      - kpi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: kpi-backend-dev
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=mmtg_dashboard
      - DB_USER=dashboard_user
      - DB_PASSWORD=${DB_PASSWORD:-your_password}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_AVAILABLE=true
      - API_PORT=3000
      - JWT_SECRET=${SECRET_KEY:-your_secret_key}
      - NODE_ENV=development
      - CORS_ORIGIN=http://localhost:5173
    ports:
      - "8000:3000"
    depends_on:
      # postgres:
      #   condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - kpi-network
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: kpi-frontend-dev
    environment:
      - VITE_API_BASE_URL=http://localhost:3000/api
    ports:
      - "8080:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - kpi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Data Ingestion Service
  # ingestion:
  #   build:
  #     context: ..
  #     dockerfile: docker/Dockerfile.ingestion
  #   container_name: kpi-ingestion-dev
  #   environment:
  #     - DATABASE_URL=postgresql://dashboard_user:${DB_PASSWORD:-your_password}@postgres:5432/mmtg_dashboard
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   networks:
  #     - kpi-network
  #   restart: unless-stopped
  #   volumes:
  #     - ../ingestion:/app
  #   healthcheck:
  #     test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local

networks:
  kpi-network:
    driver: bridge