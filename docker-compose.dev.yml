version: '3.8'

services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: kpi-redis-dev
    command: redis-server --appendonly yes
    volumes:
      - redis_data_dev:/var/lib/redis/data
    ports:
      - "6379:6379"
    networks:
      - kpi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (using existing image)
  backend:
    image: moov-kpi-app-backend:latest
    container_name: kpi-backend-dev
    environment:
      - DATABASE_URL=sqlite:///app/database/dev.sqlite
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_AVAILABLE=true
      - SECRET_KEY=dev_secret_key_for_testing
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - NODE_ENV=development
    ports:
      - "8000:3000"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - kpi-network
    restart: unless-stopped
    volumes:
      - ./backend/database:/app/database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: kpi-frontend-dev
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - kpi-network
    restart: unless-stopped

volumes:
  redis_data_dev:

networks:
  kpi-network:
    driver: bridge